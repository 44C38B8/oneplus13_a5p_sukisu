name: Cleanup

on:
  schedule:
    - cron: '0 0 * * *' 
  workflow_dispatch:    

jobs:
  jobs:
    cleanup-releases:
      runs-on: ubuntu-24.04
      steps:
        - name: Delete old releases
          uses: actions/github-script@v7
          with:
            script: |
              const { data: releases } = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100
              });

              const keep = 6; 
              const cutoffDays = 14; 
              const cutoffDate = new Date();
              cutoffDate.setDate(cutoffDate.getDate() - cutoffDays);

              for (const release of releases.slice(keep)) {
                if (new Date(release.created_at) < cutoffDate) {
       
                  await github.rest.repos.deleteRelease({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    release_id: release.id
                  });
                  console.log(`Deleted release: ${release.name}`);
                
                  try {
                    await github.rest.git.deleteRef({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      ref: `tags/${release.tag_name}`
                    });
                    console.log(`Deleted tag: ${release.tag_name}`);
                  } catch (e) {
                    console.log(`Tag not found or already deleted: ${release.tag_name}`);
                  }
                }
              }
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
